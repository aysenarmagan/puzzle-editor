{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","routes/Projects/routes/Project/components/ProjectPage/ProjectPage.js","routes/Projects/routes/Project/components/ProjectPage/ProjectPage.styles.js","routes/Projects/routes/Project/components/ProjectPage/ProjectPage.enhancer.js","routes/Projects/routes/Project/components/ProjectPage/index.js"],"names":["props","ref","classes","className","_props$raised","raised","other","Paper","root","elevation","withStyles","overflow","name","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","theme","spacing","progress","flexRowCenter","alignItems","paddingTop","ProjectPage","projectId","useParams","useFirebaseConnect","path","project","useSelector","data","firebase","projects","isLoaded","card","Typography","title","subtitle","style","marginTop","JSON","stringify","LoadingSpinner","compose","setDisplayName","withRouter","UserIsAuthenticated","enhance"],"mappings":"iLAaI,EAAO,cAAiB,SAAcA,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoBO,EAAA,EAAO,YAAS,CACtDJ,UAAW,YAAKD,EAAQM,KAAML,GAC9BM,UAAWJ,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BU,SAAAI,EAAA,GA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADO,CAEZ,GCxCC,EAAc,cAAiB,SAAqBZ,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBU,EAAmBb,EAAMc,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDP,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBe,EAAW,YAAS,CAC1DZ,UAAW,YAAKD,EAAQM,KAAML,GAC9BF,IAAKA,GACJK,OAyBU,SAAAI,EAAA,GA5CK,CAElBF,KAAM,CACJQ,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChCL,KAAM,kBADO,CAEZ,G,0DCzCGM,EAAYC,aCXH,SAAAC,GAAK,MAAK,CACvBZ,KAAM,CACJQ,QAASI,EAAMC,QAAQ,IAEzBC,SAAS,eACJF,EAAMG,cADH,CAENC,WAAY,SACZC,WAAYL,EAAMC,QAAQ,SDwCfK,MAlCf,WAAwB,IACdC,EAAcC,cAAdD,UACFzB,EAAUgB,IAGhBW,8BAAmB,iBAAM,CAAC,CAAEC,KAAK,YAAD,OAAcH,QAG9C,IAAMI,EAAUC,uBAAY,YAA6B,IAAdC,EAAa,EAAzBC,SAAYD,KACzC,OAAOA,EAAKE,UAAYF,EAAKE,SAASR,MAIxC,OAAKS,mBAASL,GAKZ,yBAAK5B,UAAWD,EAAQM,MACtB,kBAAC,EAAD,CAAML,UAAWD,EAAQmC,MACvB,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYnC,UAAWD,EAAQqC,MAAOzB,UAAU,MAC7CiB,EAAQnB,MAAQ,WAEnB,kBAAC0B,EAAA,EAAD,CAAYnC,UAAWD,EAAQsC,UAAWb,GAC1C,yBAAKc,MAAO,CAAEC,UAAW,UACvB,6BAAMC,KAAKC,UAAUb,EAAS,KAAM,QAZrC,kBAACc,EAAA,EAAD,O,yBEtBIC,cAEbC,YAAe,uBAEfC,IAEAC,KCRaC,YAAQxB","file":"static/js/Project.7cd6a8ef.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useFirebaseConnect, isLoaded } from 'react-redux-firebase'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport styles from './ProjectPage.styles'\n\nconst useStyles = makeStyles(styles)\n\nfunction ProjectPage() {\n  const { projectId } = useParams()\n  const classes = useStyles()\n\n  // Create listener for projects\n  useFirebaseConnect(() => [{ path: `projects/${projectId}` }])\n\n  // Get projects from redux state\n  const project = useSelector(({ firebase: { data } }) => {\n    return data.projects && data.projects[projectId]\n  })\n\n  // Show loading spinner while project is loading\n  if (!isLoaded(project)) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} component=\"h2\">\n            {project.name || 'Project'}\n          </Typography>\n          <Typography className={classes.subtitle}>{projectId}</Typography>\n          <div style={{ marginTop: '10rem' }}>\n            <pre>{JSON.stringify(project, null, 2)}</pre>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default ProjectPage\n","export default theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  progress: {\n    ...theme.flexRowCenter,\n    alignItems: 'center',\n    paddingTop: theme.spacing(8)\n  }\n})\n","import { compose } from 'redux'\nimport { withRouter } from 'react-router-dom'\nimport { setDisplayName } from 'recompose'\nimport { UserIsAuthenticated } from 'utils/router'\n\nexport default compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedProjectPage'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated,\n)\n","import ProjectPage from './ProjectPage'\nimport enhance from './ProjectPage.enhancer'\n\nexport default enhance(ProjectPage)\n"],"sourceRoot":""}